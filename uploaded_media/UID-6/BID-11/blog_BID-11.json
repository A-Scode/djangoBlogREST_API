[
    "<h3 className = 'blog_heading' >heading is \ud83e\udd70</h3>",
    "<p className = 'blog_para'>div.right\u00a0contains\u00a0div.header, which in turn contains the button and text.\n\ndiv.right\u00a0is a flex item in the main container (.container).\n\nBy default,\u00a0a flex item cannot be smaller than the size of its content. The initial setting on flex items is\u00a0min-width: auto.\n\nThis means that the length of your text, which is not wrapping, will set a minimum size for parent flex items. One way to enable flex items to shrink past their content is to set a flex item to\u00a0min-width: 0.\n\nYou've done this already for the\u00a0.content\u00a0flex item, but it needs to be set on the\u00a0.right\u00a0item, as well.\n\nYou've got the\u00a0.content\u00a0element set to\u00a0flex: 0 1 auto.\n\nThis tells the flex item to use the size of the content (flex-basis: auto). The text sets the size.\n\nInstead, set the width to 0 and let the flex container distribute space, as necessary.\u00a0You can do this with\u00a0flex: 1 1 0, which is the same as\u00a0flex: 1.\n\nShow code snippet\n\nrevised fiddle</p>",
    "<ul></ul>",
    "<ul><li>div.right\u00a0contains\u00a0div.header, which in turn contains the button and text.</li><li>div.right\u00a0is a flex item in the main container (.container).</li><li>By default,\u00a0a flex item cannot be smaller than the size of its content. The initial setting on flex items is\u00a0min-width: auto.</li><li>This means that the length of your text, which is not wrapping, will set a minimum size for parent flex items. One way to enable flex items to shrink past their content is to set a flex item to\u00a0min-width: 0.</li><li>You've done this already for the\u00a0.content\u00a0flex item, but it needs to be set on the\u00a0.right\u00a0item, as well.</li><li>You've got the\u00a0.content\u00a0element set to\u00a0flex: 0 1 auto.</li><li>This tells the flex item to use the size of the content (flex-basis: auto). The text sets the size.</li><li>Instead, set the width to 0 and let the flex container distribute space, as necessary.\u00a0You can do this with\u00a0flex: 1 1 0, which is the same as\u00a0flex: 1.</li><li>Show code snippet</li><li>revised fiddle</li></ul>",
    "<img className='blog_img' src ='http://localhost:8000/backend_api/getMedia?media=UID-6/BID-11/profile_girl.jpg' \n            style='    border-radius: 5px;\n    width: 90%;\n    justify-self: center;\n    object-fit: contain;\n    box-shadow: rgb(0 0 0 / 20%) 0px 0px 5px 3px;\n    aspect-ratio: 16 / 9;\n    max-width: 500px;' loading=\"lazy\" />",
    "<iframe src='https://www.youtube.com/embed/p8FJM7RAhQg'\n        title=\"YouTube video player\" frameborder=\"0\" style=\"border-radius: 5px;\n    justify-self: center;\n    box-shadow: rgb(0 0 0 / 20%) 0px 0px 5px 3px;\n    aspect-ratio: 16 / 9;\n    width: inherit;\n    max-width: 500px;\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n        allowfullscreen></iframe>"
]